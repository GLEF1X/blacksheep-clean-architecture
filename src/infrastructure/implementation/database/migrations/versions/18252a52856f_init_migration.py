"""init migration

Revision ID: 18252a52856f
Revises: None
Create Date: 2021-12-18 15:06:38.247800

"""

# revision identifiers, used by Alembic.
from datetime import datetime

from argon2 import PasswordHasher
from sqlalchemy import delete, true

from src.infrastructure.implementation.database.orm.models import OrderModel, OrderItemModel, ProductModel, \
    UserModel

revision = "18252a52856f"
down_revision = None

from alembic import op
import sqlalchemy as sa


from alembic import context


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get("data", None):
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "products",
        sa.Column("id", sa.INTEGER(), sa.Identity(always=True, cache=5), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("price", sa.INTEGER(), nullable=False),
        sa.Column("weight", sa.SMALLINT(), server_default=sa.text("1"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.INTEGER(), sa.Identity(always=True, cache=5), nullable=False),
        sa.Column("first_name", sa.VARCHAR(length=200), nullable=False),
        sa.Column("last_name", sa.VARCHAR(length=200), nullable=False),
        sa.Column("username", sa.VARCHAR(length=200), nullable=False),
        sa.Column("password_hash", sa.VARCHAR(length=200), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.INTEGER(), sa.Identity(always=True, cache=5), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("order_date", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("user_id", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="FK__order_items_users"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_items",
        sa.Column("id", sa.INTEGER(), sa.Identity(always=True, cache=5), nullable=False),
        sa.Column("order_id", sa.INTEGER(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.SMALLINT(), server_default=sa.text("1"), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
            name="FK__order_items__order_item_order",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name="FK__order_items__order_item_product",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("order_id"),
    )
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_items")
    op.drop_table("orders")
    op.drop_table("users")
    op.drop_table("products")
    # ### end Alembic commands ###



def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    op.bulk_insert(
        UserModel.__table__,
        [
            {
                "first_name": "Glib",
                "last_name": "Garanin",
                "username": "GLEF1X",
                "password_hash": PasswordHasher().hash("qwerty12345")
            },
            {
                "first_name": "Sasha",
                "last_name": "Shemetun",
                "username": "Sasha255",
                "password_hash": PasswordHasher().hash("hello_world")
            },
        ],
    )
    op.bulk_insert(
        ProductModel.__table__,
        [
            {"price": 5000, "weight": 5},
            {"price": 6000, "weight": 8},
            {"price": 1000, "weight": 1},
        ],
    )
    op.bulk_insert(
        OrderModel.__table__,
        [
            {"order_date": datetime.now(), "user_id": 1},
            {"order_date": datetime.now(), "user_id": 2},
            {"order_date": datetime.now(), "user_id": 2},
        ],
    )
    op.bulk_insert(
        OrderItemModel.__table__,
        [
            {"order_id": 1, "product_id": 1, "quantity": 5},
            {"order_id": 2, "product_id": 2, "quantity": 7},
            {"order_id": 3, "product_id": 3, "quantity": 1},
        ],
    )


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    op.execute(delete(UserModel).where(true()))
    op.execute(delete(ProductModel).where(true()))  # type: ignore
    op.execute(delete(OrderModel).where(true()))
    op.execute(delete(OrderItemModel).where(true()))

